<html lang="en">
<head>
    <title>Generate QR code</title>
    <script
            src="https://cdn.jsdelivr.net/npm/easyqrcodejs@4.6.1/dist/easy.qrcode.min.js"
            integrity="sha256-Fo2ReOrm4CpFeRT3gEiA303kO8giOmwEkm6uz3+6DBg="
            crossorigin="anonymous">
    </script>
    <style>
        div, input, table {margin: 12px 8px}
        table {border: 1px dashed}
        td {padding: 2px 4px;vertical-align: text-bottom;}
        .qr-container {
            background-color: #DDD;
            display: flex;
            justify-content: center;
            align-items: center;
            width: 512px;
            height: 512px;
        }
    </style>
</head>
<body>
<h1>Generate QR code</h1>
<h2 style="font-style: italic">WIP - only partly implemented</h2>
<p>Using <a href="https://www.jsdelivr.com/package/npm/easyqrcodejs">easyqrcodejs</a></p>
<table>
    <tr>
        <td>
            <label for="qr-text">QR text</label>
        </td>
        <td>
            <input type="text" id="qr-text" value="1234">
        </td>
    </tr>
    <tr>
        <td>
            <label for="qr-size-slider">Size</label>
        </td>
        <td>
            <input type="range" id="qr-size-slider" name="qr-size-slider" min="100" max="2000" value="250"/>
            <input type="number" id="qr-size-input" name="qr-size-input" min="100" max="2000" value="250"/>
        </td>
    </tr>
    <tr>
        <td>
            <label for="qr-data-dot-color-selector">Data dot color</label>
        </td>
        <td>
            <input type="color" id="qr-data-dot-color-selector" name="qr-data-dot-color-selector" value="#000000"/>
        </td>
    </tr>
    <tr>
        <td>
            <label for="qr-background-color-selector">Background color</label>
        </td>
        <td>
            <input type="color" id="qr-background-color-selector" name="qr-background-color-selector" value="#ffffff"/>
        </td>
    </tr>
</table>
<div style="background-color: black; width: 16px; height: 16px"></div>
<div id="qr-container" class="qr-container"></div>
<script type="text/javascript">
  let options = {
    text: "1234",
    width: 400,
    height: 400,
    colorDark: "#000000",
    colorLight: "#ffffff",
    correctLevel: QRCode.CorrectLevel.H, // L, M, Q, H
    dotScale: .8,
    dotScaleTiming: 0.8,
    dotScaleTiming_H: 0.8,
    dotScaleTiming_V: 0.8,
    dotScaleA: 0.2,
    dotScaleAO: 0.2,
    dotScaleAI: 0.2,
    quietZone: 0,
    quietZoneColor: "rgba(0,0,0,0)",
    binary: false,
    PO: '#000000', // Global Position Outer color. if not set, the defaut is `colorDark`
    PI: '#000', // Global Position Inner color. if not set, the defaut is `colorDark`
    PO_TL: '', // Position Outer color - Top Left
    PI_TL: '', // Position Inner color - Top Left
    PO_TR: '', // Position Outer color - Top Right
    PI_TR: '', // Position Inner color - Top Right
    PO_BL: '#000', // Position Outer color - Bottom Left
    PI_BL: '', // Position Inner color - Bottom Left
    AO: '', // Alignment Outer. if not set, the defaut is `colorDark`
    AI: '', // Alignment Inner. if not set, the defaut is `colorDark`
    timing: '#000', // Global Timing color. if not set, the defaut is `colorDark`
    timing_H: '', // Horizontal timing color
    timing_V: '', // Vertical timing color
    logo: "",
    //logoWidth: 40, // fixed logo width. default is `width/3.5`
    //logoHeight: 40, // fixed logo height. default is `heigth/3.5`
    logoBackgroundColor: '#fffff', // Logo backgroud color, Invalid when `logBgTransparent` is true; default is '#ffffff'
    logoMaxWidth: undefined, // Maximum logo width. if set will ignore `logoWidth` value
    logoMaxHeight: undefined, // Maximum logo height. if set will ignore `logoHeight` value
    logoBackgroundTransparent: true, // Whether use transparent image, default is false
  };

  const elements = {
    qrContainer: document.getElementById('qr-container'),
    qrSizeSlider: document.getElementById('qr-size-slider'),
    qrSizeInput: document.getElementById('qr-size-input'),
    qrColorDarkSelector: document.getElementById('qr-data-dot-color-selector'),
    qrColorLightSelector: document.getElementById('qr-background-color-selector'),
  }

  const drawQrCode = () => {
    elements.qrContainer.innerHTML = null
    new QRCode(document.getElementById("qr-container"), options)
  }

  document.getElementById('qr-text').addEventListener('input', e => {
    options.text = e.currentTarget.value
    drawQrCode()
  })

  elements.qrSizeSlider.addEventListener('input', e => {
    options.width = e.currentTarget.value
    options.height = e.currentTarget.value
    elements.qrSizeInput.value = e.currentTarget.value
    drawQrCode()
  })

  elements.qrSizeInput.addEventListener('input', e => {
    options.width = e.currentTarget.value
    options.height = e.currentTarget.value
    elements.qrSizeSlider.value = e.currentTarget.value
    drawQrCode()
  })

  elements.qrColorLightSelector.addEventListener('input', e => {
    options.colorLight = e.currentTarget.value
    drawQrCode()
  })

  elements.qrColorDarkSelector.addEventListener('input', e => {
    options.colorDark = e.currentTarget.value
    drawQrCode()
  })

  drawQrCode()
</script>
</body>
</html>
